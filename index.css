html {
  background-color: black;
}
body {
  margin: 0;
}

:root {
  --rotateSpeed: 30s;
  --bounceSpeed: 1.5s;
  --letterColor: #0ff7;
  --frameImg: url(frame.jpg);

  --photo-incline: 20deg;
  --radius: 3em;
  --photos: 6;
}

.animation {
  background-color: black;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 150px;
  perspective: 10em;
  perspective-origin: 50% calc(50% - 2em);
  overflow: hidden;
}

.scene {
  position: relative;
  transform-style: preserve-3d;
  animation: rotateScene var(--rotateSpeed) infinite linear;
}

.paused {
  animation-play-state: paused;
}

.floor {
  position: absolute;
  top: 0.5em;
  transform: translate(-50%, -50%) rotateX(90deg);
  width: 15em;
  height: 15em;
  background-image: radial-gradient(#0000, #000 85%),
    repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);
  background-size: 100%, 1em 1em;
}

/* .ball{
    position: absolute;
    width: 1em;
    height: 1em;
    left: -.5em;
    border-radius: 50%;
    background-color: white;
    transform: translate(-50%, -50%);
    background-image: radial-gradient(circle at top, white, #000);
    animation: 
        bounceBall var(--bounceSpeed) infinite ease-out,
        rotateBall var(--rotateSpeed) infinite linear;
}


.ball-shadow{
    position: absolute;
    top:50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    width: 3em;
    height: 3em;
    background-image: radial-gradient(#000, #0000 40%);
    animation: ballShadow var(--bounceSpeed) infinite ease-out;
} */

.object {
  position: absolute;
  width: 2em;
  height: 1em;
  top: -0.7em;
}

.object-shadow {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 1em;
  height: 1em;
  background-color: #000;
  /* background-image: radial-gradient(#000, #0000 40%); */
}

.object-back {
  width: 2.1em;
  height: 1em;
  top: -0.6em;
  background-image: var(--frameImg);
}

.bg {
  background-image: url("https://unsplash.it/400/200");
  background-size: cover;
  border: 15px solid transparent;
  border-image: var(--frameImg) 100;
}

/* fancy math to calculate position of each photo based on number of photoes and radius */
.pos-1 {
  --actual-angle: calc(0 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-2 {
  --actual-angle: calc(1 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-3 {
  --actual-angle: calc(2 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-4 {
  --actual-angle: calc(3 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-5 {
  --actual-angle: calc(4 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-6 {
  --actual-angle: calc(5 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}

.shadow-pos-1 {
  --actual-angle: calc(0 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-2 {
  --actual-angle: calc(1 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-3 {
  --actual-angle: calc(2 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-4 {
  --actual-angle: calc(3 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-5 {
  --actual-angle: calc(4 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-6 {
  --actual-angle: calc(5 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}

@keyframes rotateScene {
  to {
    transform: rotateY(-360deg);
  }
}

/* @keyframes rotateBall {
    from { transform: rotateY(0deg); }
    to { transform: rotateY(360deg); }
}

@keyframes bounceBall {
    0%, 100% {bottom: -.5em;}
    50% {bottom: 2em; animation-timing-function: ease-in;}
}

@keyframes ballShadow{
    0%, 100% { opacity: 1}
    50% {opacity: .5; animation-timing-function: ease-in;}
} */
