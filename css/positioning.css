/* fancy math to calculate position of each photo based on number of photoes and radius */
.pos-1 {
  --actual-angle: calc(0 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-2 {
  --actual-angle: calc(1 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-3 {
  --actual-angle: calc(2 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-4 {
  --actual-angle: calc(3 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-5 {
  --actual-angle: calc(4 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}
.pos-6 {
  --actual-angle: calc(5 * 360deg / var(--photos));
  transform: translate3d(
      calc(var(--radius) * sin(var(--actual-angle))),
      0,
      calc(var(--radius) * cos(var(--actual-angle)))
    )
    translate(-50%) rotateY(calc(var(--actual-angle)))
    rotateX(var(--photo-incline));
}

/* Positions of shadows */
.shadow-pos-1 {
  --actual-angle: calc(0 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-2 {
  --actual-angle: calc(1 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-3 {
  --actual-angle: calc(2 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-4 {
  --actual-angle: calc(3 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-5 {
  --actual-angle: calc(4 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
.shadow-pos-6 {
  --actual-angle: calc(5 * 360deg / var(--photos));

  transform: translate(
      calc(-50% + calc(var(--radius) * sin(var(--actual-angle)))),
      calc(-50% + calc(var(--radius) * cos(var(--actual-angle))))
    )
    rotateZ(calc(-1 * var(--actual-angle)));
}
